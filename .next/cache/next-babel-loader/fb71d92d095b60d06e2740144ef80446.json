{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\NextJs\\\\make\\\\src\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Navtop from '../components/layouts/navbar/NavMain';\nexport var __N_SSG = true;\nexport default function Indexs(props) {\n  _s();\n\n  var _useState = useState({\n    name: ''\n  }),\n      contact = _useState[0],\n      setContact = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    setContact(_objectSpread(_objectSpread({}, contact), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(contact);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Navtop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }\n  }));\n}\n\n_s(Indexs, \"vExK4G1zLXnnXXJ043a32LQ47xY=\");\n\n_c = Indexs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Indexs\");","map":{"version":3,"sources":["D:/NextJs/make/src/pages/index.js"],"names":["React","useState","Navtop","Indexs","props","name","contact","setContact","handleChange","e","target","value","handleSubmit","preventDefault","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBAENH,QAAQ,CAAC;AACrCI,IAAAA,IAAI,EAAE;AAD+B,GAAD,CAFF;AAAA,MAE7BC,OAF6B;AAAA,MAEpBC,UAFoB;;AAMpC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AAExBF,IAAAA,UAAU,iCAAMD,OAAN,2BAAgBG,CAAC,CAACC,MAAF,CAASL,IAAzB,EAAgCI,CAAC,CAACC,MAAF,CAASC,KAAzC,GAAV;AACD,GAHD;;AAKA,MAAMC,YAAY;AAAA,wEAAG,iBAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACI,cAAF;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZM,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAKA,SAEE,4BACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFF;AAQD;;GAxBuBT,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react';\n\nimport Navtop from '../components/layouts/navbar/NavMain'\n\nexport default function Indexs(props) {\n\n  const [contact, setContact] = useState({\n    name: '',\n  });\n\n  const handleChange = e => {\n\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(contact)\n  };\n\n  return (\n\n    <>\n     <Navtop/>\n\n    </>\n  )\n\n}\n\nexport async function getStaticProps() {\n\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n\n  return {\n    props: {\n      data,\n    },\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}