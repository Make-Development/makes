{"ast":null,"code":"var _jsxFileName = \"D:\\\\NextJs\\\\make\\\\src\\\\pages\\\\testinput.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport React from 'react';\n\nconst testinput = () => {\n  const {\n    0: contact,\n    1: setContact\n  } = useState({\n    name: '',\n    email: '',\n    subject: 'StaticForms - Contact Form',\n    honeypot: '',\n    // if any value received in this field, form submission will be ignored.\n    message: '',\n    replyTo: '@',\n    // this will set replyTo of email to email address entered in the form\n    accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\n\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    type: '',\n    message: ''\n  });\n\n  const handleChange = e => setContact(_objectSpread(_objectSpread({}, contact), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    alert(\"d\");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: \"button is-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default testinput;","map":{"version":3,"sources":["D:/NextJs/make/src/pages/testinput.js"],"names":["useState","React","testinput","contact","setContact","name","email","subject","honeypot","message","replyTo","accessKey","response","setResponse","type","handleChange","e","target","value","handleSubmit","preventDefault","alert"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC;AACnCK,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,OAAO,EAAE,4BAH0B;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAIrB;AACdC,IAAAA,OAAO,EAAE,EAL0B;AAMnCC,IAAAA,OAAO,EAAE,GAN0B;AAMrB;AACdC,IAAAA,SAAS,EAAE,gBAPwB,CAOP;;AAPO,GAAD,CAAtC;AAUA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC;AACrCc,IAAAA,IAAI,EAAE,EAD+B;AAErCL,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAAxC;;AAKA,QAAMM,YAAY,GAAGC,CAAC,IAClBZ,UAAU,iCAAMD,OAAN;AAAe,KAACa,CAAC,CAACC,MAAF,CAASZ,IAAV,GAAiBW,CAAC,CAACC,MAAF,CAASC;AAAzC,KADd;;AAGA,QAAMC,YAAY,GAAG,MAAMH,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,KAAK,CAAC,GAAD,CAAL;AACH,GAHD;;AAIA,SACI,4BACI;AACI,IAAA,MAAM,EAAC,MADX;AAEI,IAAA,QAAQ,EAAEF,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,MAHhB;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEJ,YALd;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAYI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADJ,CADJ;AAsBH,CA9CD;;AAgDA,eAAeb,SAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nimport React from 'react';\r\n\r\nconst testinput = () => {\r\n\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        email: '',\r\n        subject: 'StaticForms - Contact Form',\r\n        honeypot: '', // if any value received in this field, form submission will be ignored.\r\n        message: '',\r\n        replyTo: '@', // this will set replyTo of email to email address entered in the form\r\n        accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\r\n    });\r\n\r\n    const [response, setResponse] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const handleChange = e =>\r\n        setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        alert(\"d\")\r\n    };\r\n    return (\r\n        <>\r\n            <form\r\n                method='post'\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <input\r\n                    className='input'\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button className='button is-primary' type='submit'>\r\n                    Submit\r\n                        </button>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default testinput;\r\n"]},"metadata":{},"sourceType":"module"}