{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport NavMain from '../components/layouts/navbar/NavMain';\nimport ContentMain from '../components/layouts/content/main';\nexport default function Indexs(props) {\n  const {\n    0: contact,\n    1: setContact\n  } = useState({\n    name: ''\n  });\n\n  const handleChange = e => {\n    setContact(_objectSpread(_objectSpread({}, contact), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(contact);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(NavMain, null), __jsx(ContentMain, null, __jsx(\"div\", {\n    className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\"\n  }, __jsx(\"h1\", {\n    className: \"h2\"\n  }, \"Dashboard\"), __jsx(\"div\", {\n    className: \"btn-toolbar mb-2 mb-md-0\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"input-group mb-2 mr-sm-2\"\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-sm\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: handleChange,\n    required: true\n  }), __jsx(\"div\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-sm btn-outline-secondary \"\n  })))))), __jsx(\"div\", {\n    className: \"row\"\n  }, props.data.map(({\n    show\n  }) => __jsx(\"div\", {\n    className: \"col-3\"\n  }, __jsx(\"div\", {\n    className: \"card mb-3\",\n    style: {\n      maxWidth: 540\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\"\n  }, __jsx(\"div\", {\n    className: \"col-md-4 p-0\"\n  }, __jsx(\"img\", {\n    src: show.image.medium,\n    className: \"card-img-top\",\n    alt: \"...\"\n  })), __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"h6\", {\n    className: \"card-title\"\n  }, show._id, \" \", show.name), __jsx(\"p\", {\n    className: \"card-text\"\n  }, \"This is a wider card\"), __jsx(\"p\", {\n    className: \"card-text\"\n  }, __jsx(\"small\", {\n    className: \"text-muted\"\n  }, \"Last updated 3 mins ago\")))))))))));\n}\nexport async function getStaticProps() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}