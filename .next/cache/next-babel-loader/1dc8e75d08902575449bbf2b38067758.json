{"ast":null,"code":"var _jsxFileName = \"D:\\\\NextJs\\\\make\\\\src\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nexport default function Indexs(props) {\n  const {\n    0: contact,\n    1: setContact\n  } = useState({\n    name: ''\n  });\n\n  const handleChange = e => {\n    setContact(_objectSpread(_objectSpread({}, contact), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(contact);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(NavMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getStaticProps() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n}","map":{"version":3,"sources":["D:/NextJs/make/src/pages/index.js"],"names":["React","useState","Indexs","props","contact","setContact","name","handleChange","e","target","value","handleSubmit","preventDefault","console","log","getStaticProps","res","fetch","data","json"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEpC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC;AACrCK,IAAAA,IAAI,EAAE;AAD+B,GAAD,CAAtC;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AAExBH,IAAAA,UAAU,iCAAMD,OAAN;AAAe,OAACI,CAAC,CAACC,MAAF,CAASH,IAAV,GAAiBE,CAAC,CAACC,MAAF,CAASC;AAAzC,OAAV;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAMH,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACD,GAHD;;AAKA,SAEE,4BACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAYD;AAED,OAAO,eAAeW,cAAf,GAAgC;AAErC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLe,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import React, { useState } from 'react';\n \n\nexport default function Indexs(props) {\n\n  const [contact, setContact] = useState({\n    name: '',\n  });\n\n  const handleChange = e => {\n\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(contact)\n  };\n\n  return (\n\n    <>\n      <NavMain />\n\n  \n\n\n\n    </>\n  )\n\n}\n\nexport async function getStaticProps() {\n\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n\n  return {\n    props: {\n      data,\n    },\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}