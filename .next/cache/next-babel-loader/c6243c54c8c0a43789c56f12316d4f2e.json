{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport React from 'react';\n\nconst testinput = () => {\n  const {\n    0: contact,\n    1: setContact\n  } = useState({\n    name: '',\n    email: '',\n    subject: 'StaticForms - Contact Form',\n    honeypot: '',\n    // if any value received in this field, form submission will be ignored.\n    message: '',\n    replyTo: '@',\n    // this will set replyTo of email to email address entered in the form\n    accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\n\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    type: '',\n    message: ''\n  });\n\n  const handleChange = e => setContact(_objectSpread(_objectSpread({}, contact), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(contact);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: handleChange,\n    required: true\n  }), __jsx(\"button\", {\n    className: \"button is-primary\",\n    type: \"submit\"\n  }, \"Submit\")));\n};\n\nexport default testinput;","map":null,"metadata":{},"sourceType":"module"}