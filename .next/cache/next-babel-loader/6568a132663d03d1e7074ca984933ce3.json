{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\NextJs\\\\make\\\\src\\\\pages\\\\testinput.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport React from 'react';\n\nvar testinput = function testinput() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    subject: 'StaticForms - Contact Form',\n    honeypot: '',\n    // if any value received in this field, form submission will be ignored.\n    message: '',\n    replyTo: '@',\n    // this will set replyTo of email to email address entered in the form\n    accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\n\n  }),\n      contact = _useState[0],\n      setContact = _useState[1];\n\n  var _useState2 = useState({\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    return setContact(_objectSpread(_objectSpread({}, contact), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              alert(\"d\");\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: handleChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: \"button is-primary\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\n_s(testinput, \"3sAjWc6AXgIqe4kvrDtxDXRxbcY=\");\n\nexport default testinput;","map":{"version":3,"sources":["D:/NextJs/make/src/pages/testinput.js"],"names":["useState","React","testinput","name","email","subject","honeypot","message","replyTo","accessKey","contact","setContact","type","response","setResponse","handleChange","e","target","value","handleSubmit","preventDefault","alert"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBAEUF,QAAQ,CAAC;AACnCG,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,OAAO,EAAE,4BAH0B;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAIrB;AACdC,IAAAA,OAAO,EAAE,EAL0B;AAMnCC,IAAAA,OAAO,EAAE,GAN0B;AAMrB;AACdC,IAAAA,SAAS,EAAE,gBAPwB,CAOP;;AAPO,GAAD,CAFlB;AAAA,MAEbC,OAFa;AAAA,MAEJC,UAFI;;AAAA,mBAYYX,QAAQ,CAAC;AACrCY,IAAAA,IAAI,EAAE,EAD+B;AAErCL,IAAAA,OAAO,EAAE;AAF4B,GAAD,CAZpB;AAAA,MAYbM,QAZa;AAAA,MAYHC,WAZG;;AAiBpB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC;AAAA,WAClBL,UAAU,iCAAMD,OAAN,2BAAgBM,CAAC,CAACC,MAAF,CAASd,IAAzB,EAAgCa,CAAC,CAACC,MAAF,CAASC,KAAzC,GADQ;AAAA,GAAtB;;AAGA,MAAMC,YAAY;AAAA,wEAAG,iBAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACI,cAAF;AACAC,cAAAA,KAAK,CAAC,GAAD,CAAL;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZF,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAIA,SACI,4BACI;AACI,IAAA,MAAM,EAAC,MADX;AAEI,IAAA,QAAQ,EAAEA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,MAHhB;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEJ,YALd;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAYI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADJ,CADJ;AAsBH,CA9CD;;GAAMb,S;;AAgDN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nimport React from 'react';\r\n\r\nconst testinput = () => {\r\n\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        email: '',\r\n        subject: 'StaticForms - Contact Form',\r\n        honeypot: '', // if any value received in this field, form submission will be ignored.\r\n        message: '',\r\n        replyTo: '@', // this will set replyTo of email to email address entered in the form\r\n        accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\r\n    });\r\n\r\n    const [response, setResponse] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const handleChange = e =>\r\n        setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        alert(\"d\")\r\n    };\r\n    return (\r\n        <>\r\n            <form\r\n                method='post'\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <input\r\n                    className='input'\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button className='button is-primary' type='submit'>\r\n                    Submit\r\n                        </button>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default testinput;\r\n"]},"metadata":{},"sourceType":"module"}